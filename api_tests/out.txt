
=== Starting LibraryHub API Tests ===
Base URL: http://localhost:8080/api
Timestamp: 2025-01-18 21:20:26


=== Testing Authors Endpoints ===

==================================================
Request: GET http://localhost:8080/api/authors
Status Code: 200

Formatted Response:
[
  {
    "authorId": 1,
    "name": "J.K. Rowling",
    "birthDate": "1965-07-31"
  },
  {
    "authorId": 2,
    "name": "Isaac Asimov",
    "birthDate": "1920-01-02"
  },
  {
    "authorId": 3,
    "name": "George Orwell",
    "birthDate": "1903-06-25"
  },
  {
    "authorId": 4,
    "name": "Agatha Christie",
    "birthDate": "1890-09-14"
  },
  {
    "authorId": 5,
    "name": "J.R.R. Tolkien",
    "birthDate": "1892-01-02"
  },
  {
    "authorId": 6,
    "name": "Stephen King",
    "birthDate": "1947-09-21"
  },
  {
    "authorId": 7,
    "name": "Yuval Noah Harari",
    "birthDate": "1976-02-24"
  },
  {
    "authorId": 8,
    "name": "Jane Austen",
    "birthDate": "1775-12-15"
  },
  {
    "authorId": 9,
    "name": "Gabriel Garc\u00eda M\u00e1rquez",
    "birthDate": "1927-03-06"
  },
  {
    "authorId": 10,
    "name": "Virginia Woolf",
    "birthDate": "1882-01-24"
  },
  {
    "authorId": 11,
    "name": "Ernest Hemingway",
    "birthDate": "1899-07-20"
  },
  {
    "authorId": 12,
    "name": "Paulo Coelho",
    "birthDate": "1947-08-24"
  }
]

Progress: 1/1 tests passed.

==================================================
Request: GET http://localhost:8080/api/authors/None
Status Code: 400

Error Response:
Message: {"timestamp":"2025-01-19T00:20:26.170+00:00","status":400,"error":"Bad Request","path":"/api/authors/None"}

Progress: 1/2 tests passed.

==================================================
Request: GET http://localhost:8080/api/authors/None/books
Status Code: 400

Error Response:
Message: {"timestamp":"2025-01-19T00:20:26.174+00:00","status":400,"error":"Bad Request","path":"/api/authors/None/books"}

Progress: 1/3 tests passed.

=== Testing Books Endpoints ===

==================================================
Request: GET http://localhost:8080/api/books
Status Code: 200

Formatted Response:
[
  {
    "bookId": 1,
    "title": "Harry Potter and the Philosopher's Stone",
    "isbn": "9780747532699",
    "publishYear": 1997,
    "availableCopies": 5,
    "coverUrl": "url1",
    "authorId": 1,
    "categoryId": 4,
    "authorName": "J.K. Rowling",
    "categoryName": "Fantasy"
  },
  {
    "bookId": 2,
    "title": "Foundation",
    "isbn": "9780553293357",
    "publishYear": 1951,
    "availableCopies": 3,
    "coverUrl": "url2",
    "authorId": 2,
    "categoryId": 3,
    "authorName": "Isaac Asimov",
    "categoryName": "Science Fiction"
  },
  {
    "bookId": 3,
    "title": "1984",
    "isbn": "9780451524935",
    "publishYear": 1949,
    "availableCopies": 6,
    "coverUrl": "url3",
    "authorId": 3,
    "categoryId": 1,
    "authorName": "George Orwell",
    "categoryName": "Fiction"
  },
  {
    "bookId": 4,
    "title": "One Hundred Years of Solitude",
    "isbn": "9780060883287",
    "publishYear": 1967,
    "availableCopies": 4,
    "coverUrl": "url4",
    "authorId": 9,
    "categoryId": 1,
    "authorName": "Gabriel Garc\u00eda M\u00e1rquez",
    "categoryName": "Fiction"
  },
  {
    "bookId": 5,
    "title": "Mrs. Dalloway",
    "isbn": "9780156628709",
    "publishYear": 1925,
    "availableCopies": 3,
    "coverUrl": "url5",
    "authorId": 10,
    "categoryId": 1,
    "authorName": "Virginia Woolf",
    "categoryName": "Fiction"
  },
  {
    "bookId": 6,
    "title": "The Old Man and the Sea",
    "isbn": "9780684801223",
    "publishYear": 1952,
    "availableCopies": 5,
    "coverUrl": "url6",
    "authorId": 11,
    "categoryId": 1,
    "authorName": "Ernest Hemingway",
    "categoryName": "Fiction"
  },
  {
    "bookId": 7,
    "title": "The Alchemist",
    "isbn": "9780062315007",
    "publishYear": 1988,
    "availableCopies": 7,
    "coverUrl": "url7",
    "authorId": 12,
    "categoryId": 9,
    "authorName": "Paulo Coelho",
    "categoryName": "Romance"
  }
]

Progress: 2/4 tests passed.

==================================================
Request: GET http://localhost:8080/api/books/None
Status Code: 400

Error Response:
Message: {"timestamp":"2025-01-19T00:20:26.185+00:00","status":400,"error":"Bad Request","path":"/api/books/None"}

Progress: 2/5 tests passed.

==================================================
Request: GET http://localhost:8080/api/books/category/1
Status Code: 200

Formatted Response:
[
  {
    "bookId": 3,
    "title": "1984",
    "isbn": "9780451524935",
    "publishYear": 1949,
    "availableCopies": 6,
    "coverUrl": "url3",
    "authorId": 3,
    "categoryId": 1,
    "authorName": "George Orwell",
    "categoryName": "Fiction"
  },
  {
    "bookId": 5,
    "title": "Mrs. Dalloway",
    "isbn": "9780156628709",
    "publishYear": 1925,
    "availableCopies": 3,
    "coverUrl": "url5",
    "authorId": 10,
    "categoryId": 1,
    "authorName": "Virginia Woolf",
    "categoryName": "Fiction"
  },
  {
    "bookId": 4,
    "title": "One Hundred Years of Solitude",
    "isbn": "9780060883287",
    "publishYear": 1967,
    "availableCopies": 4,
    "coverUrl": "url4",
    "authorId": 9,
    "categoryId": 1,
    "authorName": "Gabriel Garc\u00eda M\u00e1rquez",
    "categoryName": "Fiction"
  },
  {
    "bookId": 6,
    "title": "The Old Man and the Sea",
    "isbn": "9780684801223",
    "publishYear": 1952,
    "availableCopies": 5,
    "coverUrl": "url6",
    "authorId": 11,
    "categoryId": 1,
    "authorName": "Ernest Hemingway",
    "categoryName": "Fiction"
  }
]

Progress: 3/6 tests passed.

==================================================
Request: GET http://localhost:8080/api/books/author/1
Status Code: 200

Formatted Response:
[
  {
    "bookId": 1,
    "title": "Harry Potter and the Philosopher's Stone",
    "isbn": "9780747532699",
    "publishYear": 1997,
    "availableCopies": 5,
    "coverUrl": "url1",
    "authorId": 1,
    "categoryId": 4,
    "authorName": "J.K. Rowling",
    "categoryName": "Fantasy"
  }
]

Progress: 4/7 tests passed.

=== Testing Borrows Endpoints ===

==================================================
Request: GET http://localhost:8080/api/borrows
Status Code: 200

Formatted Response:
[
  {
    "borrowId": 1,
    "borrowDate": "2025-01-13",
    "returnDate": null,
    "userId": 1,
    "bookId": 1
  },
  {
    "borrowId": 2,
    "borrowDate": "2025-01-15",
    "returnDate": null,
    "userId": 2,
    "bookId": 2
  },
  {
    "borrowId": 3,
    "borrowDate": "2024-12-29",
    "returnDate": null,
    "userId": 1,
    "bookId": 3
  },
  {
    "borrowId": 4,
    "borrowDate": "2025-01-03",
    "returnDate": null,
    "userId": 2,
    "bookId": 4
  },
  {
    "borrowId": 5,
    "borrowDate": "2024-12-19",
    "returnDate": "2025-01-04",
    "userId": 1,
    "bookId": 5
  },
  {
    "borrowId": 6,
    "borrowDate": "2024-12-24",
    "returnDate": "2025-01-07",
    "userId": 2,
    "bookId": 6
  },
  {
    "borrowId": 7,
    "borrowDate": "2025-01-16",
    "returnDate": null,
    "userId": 1,
    "bookId": 7
  },
  {
    "borrowId": 8,
    "borrowDate": "2025-01-17",
    "returnDate": null,
    "userId": 2,
    "bookId": 1
  }
]

Progress: 5/8 tests passed.

==================================================
Request: GET http://localhost:8080/api/borrows/None
Status Code: 400

Error Response:
Message: {"timestamp":"2025-01-19T00:20:26.209+00:00","status":400,"error":"Bad Request","path":"/api/borrows/None"}

Progress: 5/9 tests passed.

==================================================
Request: GET http://localhost:8080/api/borrows/user/1
Status Code: 200

Formatted Response:
[
  {
    "borrowId": 1,
    "borrowDate": "2025-01-13",
    "returnDate": null,
    "userId": 1,
    "bookId": 1
  },
  {
    "borrowId": 3,
    "borrowDate": "2024-12-29",
    "returnDate": null,
    "userId": 1,
    "bookId": 3
  },
  {
    "borrowId": 5,
    "borrowDate": "2024-12-19",
    "returnDate": "2025-01-04",
    "userId": 1,
    "bookId": 5
  },
  {
    "borrowId": 7,
    "borrowDate": "2025-01-16",
    "returnDate": null,
    "userId": 1,
    "bookId": 7
  }
]

Progress: 6/10 tests passed.

==================================================
Request: GET http://localhost:8080/api/borrows/book/1
Status Code: 200

Formatted Response:
[
  {
    "borrowId": 1,
    "borrowDate": "2025-01-13",
    "returnDate": null,
    "userId": 1,
    "bookId": 1
  },
  {
    "borrowId": 8,
    "borrowDate": "2025-01-17",
    "returnDate": null,
    "userId": 2,
    "bookId": 1
  }
]

Progress: 7/11 tests passed.

=== Testing Categories Endpoints ===

==================================================
Request: GET http://localhost:8080/api/categories
Status Code: 200

Formatted Response:
[
  {
    "categoryId": 1,
    "name": "Fiction"
  },
  {
    "categoryId": 2,
    "name": "Non-Fiction"
  },
  {
    "categoryId": 3,
    "name": "Science Fiction"
  },
  {
    "categoryId": 4,
    "name": "Fantasy"
  },
  {
    "categoryId": 5,
    "name": "Biography"
  },
  {
    "categoryId": 6,
    "name": "History"
  },
  {
    "categoryId": 7,
    "name": "Mystery"
  },
  {
    "categoryId": 8,
    "name": "Self-Help"
  },
  {
    "categoryId": 9,
    "name": "Romance"
  },
  {
    "categoryId": 10,
    "name": "Horror"
  },
  {
    "categoryId": 11,
    "name": "Poetry"
  },
  {
    "categoryId": 12,
    "name": "Drama"
  }
]

Progress: 8/12 tests passed.

==================================================
Request: GET http://localhost:8080/api/categories/None
Status Code: 400

Error Response:
Message: {"timestamp":"2025-01-19T00:20:26.231+00:00","status":400,"error":"Bad Request","path":"/api/categories/None"}

Progress: 8/13 tests passed.

==================================================
Request: GET http://localhost:8080/api/categories/None/books
Status Code: 400

Error Response:
Message: {"timestamp":"2025-01-19T00:20:26.235+00:00","status":400,"error":"Bad Request","path":"/api/categories/None/books"}

Progress: 8/14 tests passed.

=== Testing Users Endpoints ===

==================================================
Request: GET http://localhost:8080/api/users
Status Code: 200

Formatted Response:
[
  {
    "userId": 1,
    "name": "John Doe",
    "email": "john.doe@example.com",
    "phone": "123-456-7890"
  },
  {
    "userId": 2,
    "name": "Jane Smith",
    "email": "jane.smith@example.com",
    "phone": "987-654-3210"
  },
  {
    "userId": 3,
    "name": "Alice Johnson",
    "email": "alice@example.com",
    "phone": "555-0123"
  },
  {
    "userId": 4,
    "name": "Bob Wilson",
    "email": "bob@example.com",
    "phone": "555-4567"
  },
  {
    "userId": 5,
    "name": "Carol Brown",
    "email": "carol@example.com",
    "phone": "555-8901"
  }
]

Progress: 9/15 tests passed.

==================================================
Request: GET http://localhost:8080/api/users/None
Status Code: 405

Error Response:
Message: {"timestamp":"2025-01-19T00:20:26.245+00:00","status":405,"error":"Method Not Allowed","path":"/api/users/None"}

Progress: 9/16 tests passed.

=== Tests Completed ===

Final Results: 9/16 tests passed.
